# serializer version: 1
# name: test_sensor_state[Air Purifier 131s][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'air-purifier',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'LV-PUR131S',
      'name': 'Air Purifier 131s',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 131s][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.air_purifier_131s_filter_life',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 131s Filter Life',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'air-purifier-filter-life',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.air_purifier_131s_air_quality',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 131s Air Quality',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'air-purifier-air-quality',
      'unit_of_measurement': None,
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 131s][sensor.air_purifier_131s_air_quality]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 131s Air Quality',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_131s_air_quality',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor_state[Air Purifier 131s][sensor.air_purifier_131s_filter_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 131s Filter Life',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_131s_filter_life',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor_state[Air Purifier 200s][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'asd_sdfKIHG7IJHGwJGJ7GJ_ag5h3G55',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'Core200S',
      'name': 'Air Purifier 200s',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 200s][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.air_purifier_200s_filter_life',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 200s Filter Life',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'asd_sdfKIHG7IJHGwJGJ7GJ_ag5h3G55-filter-life',
      'unit_of_measurement': '%',
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 200s][sensor.air_purifier_200s_filter_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 200s Filter Life',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_200s_filter_life',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '99',
  })
# ---
# name: test_sensor_state[Air Purifier 400s][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          '400s-purifier',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'LAP-C401S-WJP',
      'name': 'Air Purifier 400s',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 400s][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.air_purifier_400s_filter_life',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 400s Filter Life',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '400s-purifier-filter-life',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.air_purifier_400s_air_quality',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 400s Air Quality',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '400s-purifier-air-quality',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.air_purifier_400s_pm2_5',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
      'original_icon': None,
      'original_name': 'Air Purifier 400s PM2.5',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '400s-purifier-pm25',
      'unit_of_measurement': 'µg/m³',
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 400s][sensor.air_purifier_400s_air_quality]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 400s Air Quality',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_400s_air_quality',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_sensor_state[Air Purifier 400s][sensor.air_purifier_400s_filter_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 400s Filter Life',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_400s_filter_life',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '99',
  })
# ---
# name: test_sensor_state[Air Purifier 400s][sensor.air_purifier_400s_pm2_5]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'Air Purifier 400s PM2.5',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_400s_pm2_5',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensor_state[Air Purifier 600s][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          '600s-purifier',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'LAP-C601S-WUS',
      'name': 'Air Purifier 600s',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 600s][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
      'entity_id': 'sensor.air_purifier_600s_filter_life',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 600s Filter Life',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '600s-purifier-filter-life',
      'unit_of_measurement': '%',
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': None,
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.air_purifier_600s_air_quality',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': None,
      'original_icon': None,
      'original_name': 'Air Purifier 600s Air Quality',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '600s-purifier-air-quality',
      'unit_of_measurement': None,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.air_purifier_600s_pm2_5',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
      'original_icon': None,
      'original_name': 'Air Purifier 600s PM2.5',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': '600s-purifier-pm25',
      'unit_of_measurement': 'µg/m³',
    }),
  ])
# ---
# name: test_sensor_state[Air Purifier 600s][sensor.air_purifier_600s_air_quality]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 600s Air Quality',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_600s_air_quality',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_sensor_state[Air Purifier 600s][sensor.air_purifier_600s_filter_life]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Air Purifier 600s Filter Life',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_600s_filter_life',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '99',
  })
# ---
# name: test_sensor_state[Air Purifier 600s][sensor.air_purifier_600s_pm2_5]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'Air Purifier 600s PM2.5',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_600s_pm2_5',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_sensor_state[Dimmable Light][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'dimmable-bulb',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'ESL100',
      'name': 'Dimmable Light',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Dimmable Light][entities]
  list([
  ])
# ---
# name: test_sensor_state[Dimmer Switch][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'dimmable-switch',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'ESWD16',
      'name': 'Dimmer Switch',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Dimmer Switch][entities]
  list([
  ])
# ---
# name: test_sensor_state[Humidifier 200s][devices]
  list([
  ])
# ---
# name: test_sensor_state[Humidifier 200s][entities]
  list([
  ])
# ---
# name: test_sensor_state[Humidifier 600S][devices]
  list([
  ])
# ---
# name: test_sensor_state[Humidifier 600S][entities]
  list([
  ])
# ---
# name: test_sensor_state[Outlet][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'outlet',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'wifi-switch-1.3',
      'name': 'Outlet',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Outlet][entities]
  list([
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_current_power',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.POWER: 'power'>,
      'original_icon': None,
      'original_name': 'Outlet current power',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_energy_use_today',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
      'original_icon': None,
      'original_name': 'Outlet energy use today',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-energy',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_energy_use_weekly',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
      'original_icon': None,
      'original_name': 'Outlet energy use weekly',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-energy-weekly',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_energy_use_monthly',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
      'original_icon': None,
      'original_name': 'Outlet energy use monthly',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-energy-monthly',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_energy_use_yearly',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
      'original_icon': None,
      'original_name': 'Outlet energy use yearly',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-energy-yearly',
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    EntityRegistryEntrySnapshot({
      'aliases': set({
      }),
      'area_id': None,
      'capabilities': dict({
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      }),
      'config_entry_id': <ANY>,
      'device_class': None,
      'device_id': <ANY>,
      'disabled_by': None,
      'domain': 'sensor',
      'entity_category': None,
      'entity_id': 'sensor.outlet_current_voltage',
      'has_entity_name': False,
      'hidden_by': None,
      'icon': None,
      'id': <ANY>,
      'name': None,
      'options': dict({
      }),
      'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
      'original_icon': None,
      'original_name': 'Outlet current voltage',
      'platform': 'vesync',
      'supported_features': 0,
      'translation_key': None,
      'unique_id': 'outlet-voltage',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
  ])
# ---
# name: test_sensor_state[Outlet][sensor.outlet_current_power]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Outlet current power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_current_power',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '25.0',
  })
# ---
# name: test_sensor_state[Outlet][sensor.outlet_current_voltage]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Outlet current voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_current_voltage',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '120.0',
  })
# ---
# name: test_sensor_state[Outlet][sensor.outlet_energy_use_monthly]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Outlet energy use monthly',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_energy_use_monthly',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_state[Outlet][sensor.outlet_energy_use_today]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Outlet energy use today',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_energy_use_today',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensor_state[Outlet][sensor.outlet_energy_use_weekly]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Outlet energy use weekly',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_energy_use_weekly',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_state[Outlet][sensor.outlet_energy_use_yearly]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Outlet energy use yearly',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.outlet_energy_use_yearly',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_state[Temperature Light][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'tunable-bulb',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'ESL100CW',
      'name': 'Temperature Light',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Temperature Light][entities]
  list([
  ])
# ---
# name: test_sensor_state[Wall Switch][devices]
  list([
    DeviceRegistryEntrySnapshot({
      'area_id': None,
      'config_entries': <ANY>,
      'configuration_url': None,
      'connections': set({
      }),
      'disabled_by': None,
      'entry_type': None,
      'hw_version': None,
      'id': <ANY>,
      'identifiers': set({
        tuple(
          'vesync',
          'switch',
        ),
      }),
      'is_new': False,
      'manufacturer': 'VeSync',
      'model': 'ESWL01',
      'name': 'Wall Switch',
      'name_by_user': None,
      'suggested_area': None,
      'sw_version': None,
      'via_device_id': None,
    }),
  ])
# ---
# name: test_sensor_state[Wall Switch][entities]
  list([
  ])
# ---
