# serializer version: 1
# name: test_sensor_states[sensor.0_0_0_0_containers_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_containers_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:docker',
    'original_name': 'Containers active',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'container_active',
    'unique_id': 'test--docker_active',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_containers_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 Containers active',
      'icon': 'mdi:docker',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_containers_active',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_containers_cpu_usage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_containers_cpu_usage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:docker',
    'original_name': 'Containers CPU usage',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'container_cpu_usage',
    'unique_id': 'test--docker_cpu_use',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_containers_cpu_usage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 Containers CPU usage',
      'icon': 'mdi:docker',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_containers_cpu_usage',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '77.2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_containers_memory_used-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_containers_memory_used',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:docker',
    'original_name': 'Containers memory used',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'container_memory_used',
    'unique_id': 'test--docker_memory_use',
    'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_containers_memory_used-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 Containers memory used',
      'icon': 'mdi:docker',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_containers_memory_used',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1149.6',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_cpu_thermal_1_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_cpu_thermal_1_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'cpu_thermal 1 temperature',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'temperature',
    'unique_id': 'test-cpu_thermal 1-temperature_core',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_cpu_thermal_1_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': '0.0.0.0 cpu_thermal 1 temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_cpu_thermal_1_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '59',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_data_size-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_data_size',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:memory',
    'original_name': 'Data size',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'memory_used',
    'unique_id': 'test--memory_use',
    'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_data_size-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 Data size',
      'icon': 'mdi:memory',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_data_size',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1047.1',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_err_temp_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_err_temp_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'err_temp temperature',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'temperature',
    'unique_id': 'test-err_temp-temperature_hdd',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_err_temp_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': '0.0.0.0 err_temp temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_err_temp_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md1_available-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_md1_available',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': 'md1 available',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'raid_available',
    'unique_id': 'test-md1-available',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md1_available-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 md1 available',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_md1_available',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md1_used-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_md1_used',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': 'md1 used',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'raid_used',
    'unique_id': 'test-md1-used',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md1_used-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 md1 used',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_md1_used',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md3_available-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_md3_available',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': 'md3 available',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'raid_available',
    'unique_id': 'test-md3-available',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md3_available-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 md3 available',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_md3_available',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md3_used-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_md3_used',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': 'md3 used',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'raid_used',
    'unique_id': 'test-md3-used',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_md3_used-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 md3 used',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_md3_used',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_free-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_media_disk_free',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:harddisk',
    'original_name': '/media disk free',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_free',
    'unique_id': 'test-/media-disk_free',
    'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_free-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 /media disk free',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_media_disk_free',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '426.5',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_usage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_media_disk_usage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': '/media disk usage',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_usage',
    'unique_id': 'test-/media-disk_use_percent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_usage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 /media disk usage',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_media_disk_usage',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.7',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_used-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_media_disk_used',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:harddisk',
    'original_name': '/media disk used',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_used',
    'unique_id': 'test-/media-disk_use',
    'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_media_disk_used-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 /media disk used',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_media_disk_used',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '30.7',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_memory_free-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_memory_free',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:memory',
    'original_name': 'Memory free',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'memory_free',
    'unique_id': 'test--memory_free',
    'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_memory_free-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 Memory free',
      'icon': 'mdi:memory',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.MEBIBYTES: 'MiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_memory_free',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2745.0',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_memory_usage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_memory_usage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:memory',
    'original_name': 'Memory usage',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'memory_usage',
    'unique_id': 'test--memory_use_percent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_memory_usage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 Memory usage',
      'icon': 'mdi:memory',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_memory_usage',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '27.6',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_na_temp_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_na_temp_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'na_temp temperature',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'temperature',
    'unique_id': 'test-na_temp-temperature_hdd',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_na_temp_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': '0.0.0.0 na_temp temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_na_temp_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_free-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_free',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:harddisk',
    'original_name': '/ssl disk free',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_free',
    'unique_id': 'test-/ssl-disk_free',
    'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_free-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 /ssl disk free',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_free',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '426.5',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_usage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_usage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:harddisk',
    'original_name': '/ssl disk usage',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_usage',
    'unique_id': 'test-/ssl-disk_use_percent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_usage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': '0.0.0.0 /ssl disk usage',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_usage',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '6.7',
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_used-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_used',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.DATA_SIZE: 'data_size'>,
    'original_icon': 'mdi:harddisk',
    'original_name': '/ssl disk used',
    'platform': 'glances',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'disk_used',
    'unique_id': 'test-/ssl-disk_use',
    'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
  })
# ---
# name: test_sensor_states[sensor.0_0_0_0_ssl_disk_used-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'data_size',
      'friendly_name': '0.0.0.0 /ssl disk used',
      'icon': 'mdi:harddisk',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfInformation.GIBIBYTES: 'GiB'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.0_0_0_0_ssl_disk_used',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '30.7',
  })
# ---
