# serializer version: 1
# name: test_pipeline_from_audio_stream
  list([
    dict({
      'data': dict({
        'language': 'en-US',
        'pipeline': 'en-US',
      }),
      'type': <PipelineEventType.RUN_START: 'run-start'>,
    }),
    dict({
      'data': dict({
        'engine': 'test',
        'metadata': dict({
          'bit_rate': <AudioBitRates.BITRATE_16: 16>,
          'channel': <AudioChannels.CHANNEL_MONO: 1>,
          'codec': <AudioCodecs.PCM: 'pcm'>,
          'format': <AudioFormats.WAV: 'wav'>,
          'language': 'en-US',
          'sample_rate': <AudioSampleRates.SAMPLERATE_16000: 16000>,
        }),
      }),
      'type': <PipelineEventType.STT_START: 'stt-start'>,
    }),
    dict({
      'data': dict({
        'stt_output': dict({
          'text': 'test transcript',
        }),
      }),
      'type': <PipelineEventType.STT_END: 'stt-end'>,
    }),
    dict({
      'data': dict({
        'engine': 'homeassistant',
        'intent_input': 'test transcript',
      }),
      'type': <PipelineEventType.INTENT_START: 'intent-start'>,
    }),
    dict({
      'data': dict({
        'intent_output': dict({
          'conversation_id': None,
          'response': dict({
            'card': dict({
            }),
            'data': dict({
              'code': 'no_intent_match',
            }),
            'language': 'en-US',
            'response_type': 'error',
            'speech': dict({
              'plain': dict({
                'extra_data': None,
                'speech': "Sorry, I couldn't understand that",
              }),
            }),
          }),
        }),
      }),
      'type': <PipelineEventType.INTENT_END: 'intent-end'>,
    }),
    dict({
      'data': dict({
        'engine': 'test',
        'tts_input': "Sorry, I couldn't understand that",
      }),
      'type': <PipelineEventType.TTS_START: 'tts-start'>,
    }),
    dict({
      'data': dict({
        'tts_output': dict({
          'mime_type': 'audio/mpeg',
          'url': '/api/tts_proxy/dae2cdcb27a1d1c3b07ba2c7db91480f9d4bfd8f_en-us_-_test.mp3',
        }),
      }),
      'type': <PipelineEventType.TTS_END: 'tts-end'>,
    }),
    dict({
      'data': dict({
      }),
      'type': <PipelineEventType.RUN_END: 'run-end'>,
    }),
  ])
# ---
