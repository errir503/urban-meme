# serializer version: 1
# name: test_component_config_validation_error[basic]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at configuration.yaml, line 6: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 9: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 12: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 18: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 19: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 20: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_2] at configuration.yaml, line 27: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_3] at configuration.yaml, line 32: expected int for dictionary value 'adr_0007_3->port', got 'foo'.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_4] at configuration.yaml, line 37: 'no_such_option' is an invalid option for [adr_0007_4], check: adr_0007_4->no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [adr_0007_5] at configuration.yaml, line 43: required key 'host' not provided.
        Invalid config for [adr_0007_5] at configuration.yaml, line 44: 'no_such_option' is an invalid option for [adr_0007_5], check: adr_0007_5->no_such_option
        Invalid config for [adr_0007_5] at configuration.yaml, line 45: expected int for dictionary value 'adr_0007_5->port', got 'foo'.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [custom_validator_ok_2] at configuration.yaml, line 52: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 55: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error[basic_include]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at integrations/iot_domain.yaml, line 5: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 8: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 11: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 17: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 18: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 19: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_2] at configuration.yaml, line 3: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_3] at integrations/adr_0007_3.yaml, line 3: expected int for dictionary value 'adr_0007_3->port', got 'foo'.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_4] at integrations/adr_0007_4.yaml, line 3: 'no_such_option' is an invalid option for [adr_0007_4], check: adr_0007_4->no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [adr_0007_5] at configuration.yaml, line 6: required key 'host' not provided.
        Invalid config for [adr_0007_5] at integrations/adr_0007_5.yaml, line 5: 'no_such_option' is an invalid option for [adr_0007_5], check: adr_0007_5->no_such_option
        Invalid config for [adr_0007_5] at integrations/adr_0007_5.yaml, line 6: expected int for dictionary value 'adr_0007_5->port', got 'foo'.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [custom_validator_ok_2] at configuration.yaml, line 8: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 9: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error[include_dir_list]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at iot_domain/iot_domain_2.yaml, line 2: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_3.yaml, line 3: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_4.yaml, line 3: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_5.yaml, line 5: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_5.yaml, line 6: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_5.yaml, line 7: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 1: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error[include_dir_merge_list]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at iot_domain/iot_domain_1.yaml, line 5: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_2.yaml, line 3: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_2.yaml, line 6: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_2.yaml, line 12: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_2.yaml, line 13: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at iot_domain/iot_domain_2.yaml, line 14: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 1: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error[packages]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at configuration.yaml, line 11: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 16: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 21: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 29: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 30: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 31: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_2] at configuration.yaml, line 38: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_3] at configuration.yaml, line 43: expected int for dictionary value 'adr_0007_3->port', got 'foo'.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_4] at configuration.yaml, line 48: 'no_such_option' is an invalid option for [adr_0007_4], check: adr_0007_4->no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [adr_0007_5] at configuration.yaml, line 54: required key 'host' not provided.
        Invalid config for [adr_0007_5] at configuration.yaml, line 55: 'no_such_option' is an invalid option for [adr_0007_5], check: adr_0007_5->no_such_option
        Invalid config for [adr_0007_5] at configuration.yaml, line 56: expected int for dictionary value 'adr_0007_5->port', got 'foo'.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [custom_validator_ok_2] at configuration.yaml, line 64: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 67: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error[packages_include_dir_named]
  list([
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain] at integrations/iot_domain.yaml, line 6: required key 'platform' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 9: expected str for dictionary value 'option1', got 123.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 12: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 18: required key 'option1' not provided.
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 19: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option
        Invalid config for [iot_domain.non_adr_0007] at integrations/iot_domain.yaml, line 20: expected str for dictionary value 'option2', got 123.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_2] at integrations/adr_0007_2.yaml, line 2: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_3] at integrations/adr_0007_3.yaml, line 4: expected int for dictionary value 'adr_0007_3->port', got 'foo'.",
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [adr_0007_4] at integrations/adr_0007_4.yaml, line 4: 'no_such_option' is an invalid option for [adr_0007_4], check: adr_0007_4->no_such_option",
    }),
    dict({
      'has_exc_info': False,
      'message': '''
        Invalid config for [adr_0007_5] at integrations/adr_0007_5.yaml, line 5: required key 'host' not provided.
        Invalid config for [adr_0007_5] at integrations/adr_0007_5.yaml, line 6: 'no_such_option' is an invalid option for [adr_0007_5], check: adr_0007_5->no_such_option
        Invalid config for [adr_0007_5] at integrations/adr_0007_5.yaml, line 7: expected int for dictionary value 'adr_0007_5->port', got 'foo'.
      ''',
    }),
    dict({
      'has_exc_info': False,
      'message': "Invalid config for [custom_validator_ok_2] at integrations/custom_validator_ok_2.yaml, line 2: required key 'host' not provided.",
    }),
    dict({
      'has_exc_info': True,
      'message': 'Invalid config for [custom_validator_bad_1] at integrations/custom_validator_bad_1.yaml, line 2: broken',
    }),
    dict({
      'has_exc_info': True,
      'message': 'Unknown error calling custom_validator_bad_2 config validator',
    }),
  ])
# ---
# name: test_component_config_validation_error_with_docs[basic]
  list([
    "Invalid config for [iot_domain] at configuration.yaml, line 6: required key 'platform' not provided. Please check the docs at https://www.home-assistant.io/integrations/iot_domain.",
    "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 9: expected str for dictionary value 'option1', got 123. Please check the docs at https://www.home-assistant.io/integrations/non_adr_0007.",
    "Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 12: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option. Please check the docs at https://www.home-assistant.io/integrations/non_adr_0007",
    '''
      Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 18: required key 'option1' not provided. Please check the docs at https://www.home-assistant.io/integrations/non_adr_0007.
      Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 19: 'no_such_option' is an invalid option for [iot_domain.non_adr_0007], check: no_such_option. Please check the docs at https://www.home-assistant.io/integrations/non_adr_0007
      Invalid config for [iot_domain.non_adr_0007] at configuration.yaml, line 20: expected str for dictionary value 'option2', got 123. Please check the docs at https://www.home-assistant.io/integrations/non_adr_0007.
    ''',
    "Invalid config for [adr_0007_2] at configuration.yaml, line 27: required key 'host' not provided. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_2.",
    "Invalid config for [adr_0007_3] at configuration.yaml, line 32: expected int for dictionary value 'adr_0007_3->port', got 'foo'. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_3.",
    "Invalid config for [adr_0007_4] at configuration.yaml, line 37: 'no_such_option' is an invalid option for [adr_0007_4], check: adr_0007_4->no_such_option. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_4",
    '''
      Invalid config for [adr_0007_5] at configuration.yaml, line 43: required key 'host' not provided. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_5.
      Invalid config for [adr_0007_5] at configuration.yaml, line 44: 'no_such_option' is an invalid option for [adr_0007_5], check: adr_0007_5->no_such_option. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_5
      Invalid config for [adr_0007_5] at configuration.yaml, line 45: expected int for dictionary value 'adr_0007_5->port', got 'foo'. Please check the docs at https://www.home-assistant.io/integrations/adr_0007_5.
    ''',
    "Invalid config for [custom_validator_ok_2] at configuration.yaml, line 52: required key 'host' not provided. Please check the docs at https://www.home-assistant.io/integrations/custom_validator_ok_2.",
    'Invalid config for [custom_validator_bad_1] at configuration.yaml, line 55: broken Please check the docs at https://www.home-assistant.io/integrations/custom_validator_bad_1.',
    'Unknown error calling custom_validator_bad_2 config validator',
  ])
# ---
# name: test_package_merge_error[packages]
  list([
    'Package pack_1 setup failed. Integration adr_0007_1 cannot be merged. Dict expected in main config. (See configuration.yaml:9).',
    'Package pack_2 setup failed. Integration adr_0007_2 cannot be merged. Expected a dict. (See configuration.yaml:13).',
    "Package pack_4 setup failed. Integration adr_0007_3 has duplicate key 'host'. (See configuration.yaml:20).",
    "Package pack_5 setup failed. Integration 'unknown_integration' not found. (See configuration.yaml:23).",
  ])
# ---
# name: test_package_merge_error[packages_include_dir_named]
  list([
    'Package adr_0007_1 setup failed. Integration adr_0007_1 cannot be merged. Dict expected in main config. (See integrations/adr_0007_1.yaml:2).',
    'Package adr_0007_2 setup failed. Integration adr_0007_2 cannot be merged. Expected a dict. (See integrations/adr_0007_2.yaml:2).',
    "Package adr_0007_3_2 setup failed. Integration adr_0007_3 has duplicate key 'host'. (See integrations/adr_0007_3_2.yaml:1).",
    "Package unknown_integration setup failed. Integration 'unknown_integration' not found. (See integrations/unknown_integration.yaml:2).",
  ])
# ---
# name: test_package_merge_exception[packages-error0]
  list([
    "Package pack_1 setup failed. Integration test_domain caused error: No such file or directory: b'liblibc.a' (See configuration.yaml:4).",
  ])
# ---
# name: test_package_merge_exception[packages-error1]
  list([
    "Package pack_1 setup failed. Integration test_domain caused error: ModuleNotFoundError: No module named 'not_installed_something' (See configuration.yaml:4).",
  ])
# ---
# name: test_package_merge_exception[packages_include_dir_named-error0]
  list([
    "Package unknown_integration setup failed. Integration test_domain caused error: No such file or directory: b'liblibc.a' (See integrations/unknown_integration.yaml:1).",
  ])
# ---
# name: test_package_merge_exception[packages_include_dir_named-error1]
  list([
    "Package unknown_integration setup failed. Integration test_domain caused error: ModuleNotFoundError: No module named 'not_installed_something' (See integrations/unknown_integration.yaml:1).",
  ])
# ---
# name: test_yaml_error[basic]
  '''
  mapping values are not allowed here
    in "<BASE_PATH>/fixtures/core/config/yaml_errors/basic/configuration.yaml", line 4, column 14
  '''
# ---
# name: test_yaml_error[basic].1
  list([
    '''
      mapping values are not allowed here
        in "<BASE_PATH>/fixtures/core/config/yaml_errors/basic/configuration.yaml", line 4, column 14
    ''',
  ])
# ---
# name: test_yaml_error[basic_include]
  '''
  mapping values are not allowed here
    in "<BASE_PATH>/fixtures/core/config/yaml_errors/basic_include/integrations/iot_domain.yaml", line 3, column 12
  '''
# ---
# name: test_yaml_error[basic_include].1
  list([
    '''
      mapping values are not allowed here
        in "<BASE_PATH>/fixtures/core/config/yaml_errors/basic_include/integrations/iot_domain.yaml", line 3, column 12
    ''',
  ])
# ---
# name: test_yaml_error[include_dir_list]
  '''
  mapping values are not allowed here
    in "<BASE_PATH>/fixtures/core/config/yaml_errors/include_dir_list/iot_domain/iot_domain_1.yaml", line 3, column 10
  '''
# ---
# name: test_yaml_error[include_dir_list].1
  list([
    '''
      mapping values are not allowed here
        in "<BASE_PATH>/fixtures/core/config/yaml_errors/include_dir_list/iot_domain/iot_domain_1.yaml", line 3, column 10
    ''',
  ])
# ---
# name: test_yaml_error[include_dir_merge_list]
  '''
  mapping values are not allowed here
    in "<BASE_PATH>/fixtures/core/config/yaml_errors/include_dir_merge_list/iot_domain/iot_domain_1.yaml", line 3, column 12
  '''
# ---
# name: test_yaml_error[include_dir_merge_list].1
  list([
    '''
      mapping values are not allowed here
        in "<BASE_PATH>/fixtures/core/config/yaml_errors/include_dir_merge_list/iot_domain/iot_domain_1.yaml", line 3, column 12
    ''',
  ])
# ---
# name: test_yaml_error[packages_include_dir_named]
  '''
  mapping values are not allowed here
    in "<BASE_PATH>/fixtures/core/config/yaml_errors/packages_include_dir_named/integrations/adr_0007_1.yaml", line 4, column 9
  '''
# ---
# name: test_yaml_error[packages_include_dir_named].1
  list([
    '''
      mapping values are not allowed here
        in "<BASE_PATH>/fixtures/core/config/yaml_errors/packages_include_dir_named/integrations/adr_0007_1.yaml", line 4, column 9
    ''',
  ])
# ---
