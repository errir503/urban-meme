{
  "title": "Group",
  "config": {
    "step": {
      "user": {
        "title": "Add Group",
        "description": "Groups allow you to create a new entity that represents multiple entities of the same type.",
        "menu_options": {
          "binary_sensor": "Binary sensor group",
          "cover": "Cover group",
          "fan": "Fan group",
          "light": "Light group",
          "lock": "Lock group",
          "media_player": "Media player group",
          "sensor": "Sensor group",
          "switch": "Switch group"
        }
      },
      "binary_sensor": {
        "title": "[%key:component::group::config::step::user::title%]",
        "description": "If \"all entities\" is enabled, the group's state is on only if all members are on. If \"all entities\" is disabled, the group's state is on if any member is on.",
        "data": {
          "all": "All entities",
          "entities": "Members",
          "hide_members": "Hide members",
          "name": "Name"
        }
      },
      "cover": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      },
      "fan": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      },
      "light": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      },
      "lock": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      },
      "media_player": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      },
      "sensor": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "ignore_non_numeric": "Ignore non-numeric",
          "entities": "Members",
          "hide_members": "Hide members",
          "name": "Name",
          "type": "Type",
          "round_digits": "Round value to number of decimals",
          "device_class": "Device class",
          "state_class": "State class",
          "unit_of_measurement": "Unit of Measurement"
        }
      },
      "switch": {
        "title": "[%key:component::group::config::step::user::title%]",
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:component::group::config::step::binary_sensor::data::name%]"
        }
      }
    }
  },
  "options": {
    "step": {
      "binary_sensor": {
        "description": "[%key:component::group::config::step::binary_sensor::description%]",
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "cover": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "fan": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "light": {
        "description": "[%key:component::group::config::step::binary_sensor::description%]",
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "lock": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "media_player": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "sensor": {
        "description": "If \"ignore non-numeric\" is enabled, the group's state is calculated if at least one member has a numerical value. If \"ignore non-numeric\" is disabled, the group's state is calculated only if all group members have numerical values.",
        "data": {
          "ignore_non_numeric": "[%key:component::group::config::step::sensor::data::ignore_non_numeric%]",
          "entities": "[%key:component::group::config::step::sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::sensor::data::hide_members%]",
          "type": "[%key:component::group::config::step::sensor::data::type%]",
          "round_digits": "[%key:component::group::config::step::sensor::data::round_digits%]",
          "device_class": "[%key:component::group::config::step::sensor::data::device_class%]",
          "state_class": "[%key:component::group::config::step::sensor::data::state_class%]",
          "unit_of_measurement": "[%key:component::group::config::step::sensor::data::unit_of_measurement%]"
        }
      },
      "switch": {
        "description": "[%key:component::group::config::step::binary_sensor::description%]",
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      }
    }
  },
  "entity_component": {
    "_": {
      "name": "[%key:component::group::title%]",
      "state": {
        "off": "[%key:common::state::off%]",
        "on": "[%key:common::state::on%]",
        "home": "[%key:component::device_tracker::entity_component::_::state::home%]",
        "not_home": "[%key:component::device_tracker::entity_component::_::state::not_home%]",
        "open": "[%key:common::state::open%]",
        "closed": "[%key:common::state::closed%]",
        "locked": "[%key:common::state::locked%]",
        "unlocked": "[%key:common::state::unlocked%]",
        "ok": "[%key:component::binary_sensor::entity_component::problem::state::off%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::state::on%]"
      },
      "state_attributes": {
        "entity_id": {
          "name": "Members"
        }
      }
    }
  }
}
