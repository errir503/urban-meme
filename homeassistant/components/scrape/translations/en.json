{
    "config": {
        "abort": {
            "already_configured": "Account is already configured"
        },
        "error": {
            "resource_error": "Could not update rest data. Verify your configuration"
        },
        "step": {
            "sensor": {
                "data": {
                    "attribute": "Attribute",
                    "device_class": "Device Class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State Class",
                    "unit_of_measurement": "Unit of Measurement",
                    "value_template": "Value Template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag",
                    "device_class": "The type/class of the sensor to set the icon in the frontend",
                    "index": "Defines which of the elements returned by the CSS selector to use",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details",
                    "state_class": "The state_class of the sensor",
                    "unit_of_measurement": "Choose temperature measurement or create your own",
                    "value_template": "Defines a template to get the state of the sensor"
                }
            },
            "user": {
                "data": {
                    "authentication": "Select authentication method",
                    "headers": "Headers",
                    "method": "Method",
                    "password": "Password",
                    "resource": "Resource",
                    "timeout": "Timeout",
                    "username": "Username",
                    "verify_ssl": "Verify SSL certificate"
                },
                "data_description": {
                    "authentication": "Type of the HTTP authentication. Either basic or digest",
                    "headers": "Headers to use for the web request",
                    "resource": "The URL to the website that contains the value",
                    "timeout": "Timeout for connection to website",
                    "verify_ssl": "Enables/disables verification of SSL/TLS certificate, for example if it is self-signed"
                }
            }
        }
    },
    "issues": {
        "moved_yaml": {
            "description": "Configuring Scrape using YAML has been moved to integration key.\n\nYour existing YAML configuration will be working for 2 more versions.\n\nMigrate your YAML configuration to the integration key according to the documentation.",
            "title": "The Scrape YAML configuration has been moved"
        }
    },
    "options": {
        "step": {
            "add_sensor": {
                "data": {
                    "attribute": "Attribute",
                    "device_class": "Device Class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State Class",
                    "unit_of_measurement": "Unit of Measurement",
                    "value_template": "Value Template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag",
                    "device_class": "The type/class of the sensor to set the icon in the frontend",
                    "index": "Defines which of the elements returned by the CSS selector to use",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details",
                    "state_class": "The state_class of the sensor",
                    "unit_of_measurement": "Choose temperature measurement or create your own",
                    "value_template": "Defines a template to get the state of the sensor"
                }
            },
            "edit_sensor": {
                "data": {
                    "attribute": "Attribute",
                    "device_class": "Device Class",
                    "index": "Index",
                    "name": "Name",
                    "select": "Select",
                    "state_class": "State Class",
                    "unit_of_measurement": "Unit of Measurement",
                    "value_template": "Value Template"
                },
                "data_description": {
                    "attribute": "Get value of an attribute on the selected tag",
                    "device_class": "The type/class of the sensor to set the icon in the frontend",
                    "index": "Defines which of the elements returned by the CSS selector to use",
                    "select": "Defines what tag to search for. Check Beautifulsoup CSS selectors for details",
                    "state_class": "The state_class of the sensor",
                    "unit_of_measurement": "Choose temperature measurement or create your own",
                    "value_template": "Defines a template to get the state of the sensor"
                }
            },
            "init": {
                "menu_options": {
                    "add_sensor": "Add sensor",
                    "remove_sensor": "Remove sensor",
                    "resource": "Configure resource",
                    "select_edit_sensor": "Configure sensor"
                }
            },
            "resource": {
                "data": {
                    "authentication": "Select authentication method",
                    "headers": "Headers",
                    "method": "Method",
                    "password": "Password",
                    "resource": "Resource",
                    "timeout": "Timeout",
                    "username": "Username",
                    "verify_ssl": "Verify SSL certificate"
                },
                "data_description": {
                    "authentication": "Type of the HTTP authentication. Either basic or digest",
                    "headers": "Headers to use for the web request",
                    "resource": "The URL to the website that contains the value",
                    "timeout": "Timeout for connection to website",
                    "verify_ssl": "Enables/disables verification of SSL/TLS certificate, for example if it is self-signed"
                }
            }
        }
    }
}