{
    "config": {
        "abort": {
            "already_configured": "Service is already configured",
            "single_instance_allowed": "Already configured. Only a single configuration possible."
        },
        "error": {
            "bad_birth": "Invalid birth topic",
            "bad_certificate": "The CA certificate is invalid",
            "bad_client_cert": "Invalid client certificate, ensure a PEM coded file is supplied",
            "bad_client_cert_key": "Client certificate and private key are not a valid pair",
            "bad_client_key": "Invalid private key, ensure a PEM coded file is supplied without password",
            "bad_discovery_prefix": "Invalid discovery prefix",
            "bad_will": "Invalid will topic",
            "bad_ws_headers": "Supply valid HTTP headers as a JSON object",
            "cannot_connect": "Failed to connect",
            "invalid_inclusion": "The client certificate and private key must be configurered together"
        },
        "step": {
            "broker": {
                "data": {
                    "advanced_options": "Advanced options",
                    "broker": "Broker",
                    "certificate": "Upload custom CA certificate file",
                    "client_cert": "Upload client certificate file",
                    "client_id": "Client ID (leave empty to randomly generated one)",
                    "client_key": "Upload private key file",
                    "keepalive": "The time between sending keep alive messages",
                    "password": "Password",
                    "port": "Port",
                    "protocol": "MQTT protocol",
                    "set_ca_cert": "Broker certificate validation",
                    "set_client_cert": "Use a client certificate",
                    "tls_insecure": "Ignore broker certificate validation",
                    "transport": "MQTT transport",
                    "username": "Username",
                    "ws_headers": "WebSocket headers in JSON format",
                    "ws_path": "WebSocket path"
                },
                "description": "Please enter the connection information of your MQTT broker."
            },
            "hassio_confirm": {
                "data": {
                    "discovery": "Enable discovery"
                },
                "description": "Do you want to configure Home Assistant to connect to the MQTT broker provided by the add-on {addon}?",
                "title": "MQTT Broker via Home Assistant add-on"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "button_1": "First button",
            "button_2": "Second button",
            "button_3": "Third button",
            "button_4": "Fourth button",
            "button_5": "Fifth button",
            "button_6": "Sixth button",
            "turn_off": "Turn off",
            "turn_on": "Turn on"
        },
        "trigger_type": {
            "button_double_press": "\"{subtype}\" double clicked",
            "button_long_press": "\"{subtype}\" continuously pressed",
            "button_long_release": "\"{subtype}\" released after long press",
            "button_quadruple_press": "\"{subtype}\" quadruple clicked",
            "button_quintuple_press": "\"{subtype}\" quintuple clicked",
            "button_short_press": "\"{subtype}\" pressed",
            "button_short_release": "\"{subtype}\" released",
            "button_triple_press": "\"{subtype}\" triple clicked"
        }
    },
    "issues": {
        "deprecated_yaml": {
            "description": "Manually configured MQTT {platform}(s) found under platform key `{platform}`.\n\nPlease move the configuration to the `mqtt` integration key and restart Home Assistant to fix this issue. See the [documentation]({more_info_url}), for more information.",
            "title": "Your manually configured MQTT {platform}(s) needs attention"
        },
        "deprecated_yaml_broker_settings": {
            "description": "The following settings found in `configuration.yaml` were migrated to MQTT config entry and will now override the settings in `configuration.yaml`:\n`{deprecated_settings}`\n\nPlease remove these settings from `configuration.yaml` and restart Home Assistant to fix this issue. See the [documentation]({more_info_url}), for more information.",
            "title": "Deprecated MQTT settings found in `configuration.yaml`"
        }
    },
    "options": {
        "error": {
            "bad_birth": "Invalid birth topic",
            "bad_certificate": "The CA certificate is invalid",
            "bad_client_cert": "Invalid client certificate, ensure a PEM coded file is supplied",
            "bad_client_cert_key": "Client certificate and private key are not a valid pair",
            "bad_client_key": "Invalid private key, ensure a PEM coded file is supplied without password",
            "bad_discovery_prefix": "Invalid discovery prefix",
            "bad_will": "Invalid will topic",
            "bad_ws_headers": "Supply valid HTTP headers as a JSON object",
            "cannot_connect": "Failed to connect",
            "invalid_inclusion": "The client certificate and private key must be configurered together"
        },
        "step": {
            "broker": {
                "data": {
                    "advanced_options": "Advanced options",
                    "broker": "Broker",
                    "certificate": "Upload custom CA certificate file",
                    "client_cert": "Upload client certificate file",
                    "client_id": "Client ID (leave empty to randomly generated one)",
                    "client_key": "Upload private key file",
                    "keepalive": "The time between sending keep alive messages",
                    "password": "Password",
                    "port": "Port",
                    "protocol": "MQTT protocol",
                    "set_ca_cert": "Broker certificate validation",
                    "set_client_cert": "Use a client certificate",
                    "tls_insecure": "Ignore broker certificate validation",
                    "transport": "MQTT transport",
                    "username": "Username",
                    "ws_headers": "WebSocket headers in JSON format",
                    "ws_path": "WebSocket path"
                },
                "description": "Please enter the connection information of your MQTT broker.",
                "title": "Broker options"
            },
            "options": {
                "data": {
                    "birth_enable": "Enable birth message",
                    "birth_payload": "Birth message payload",
                    "birth_qos": "Birth message QoS",
                    "birth_retain": "Birth message retain",
                    "birth_topic": "Birth message topic",
                    "discovery": "Enable discovery",
                    "discovery_prefix": "Discovery prefix",
                    "will_enable": "Enable will message",
                    "will_payload": "Will message payload",
                    "will_qos": "Will message QoS",
                    "will_retain": "Will message retain",
                    "will_topic": "Will message topic"
                },
                "description": "Discovery - If discovery is enabled (recommended), Home Assistant will automatically discover devices and entities which publish their configuration on the MQTT broker. If discovery is disabled, all configuration must be done manually.\nDiscovery prefix - The prefix a configuration topic for automatic discovery must start with.\nBirth message - The birth message will be sent each time Home Assistant (re)connects to the MQTT broker.\nWill message - The will message will be sent each time Home Assistant loses its connection to the broker, both in case of a clean (e.g. Home Assistant shutting down) and in case of an unclean (e.g. Home Assistant crashing or losing its network connection) disconnect.",
                "title": "MQTT options"
            }
        }
    },
    "selector": {
        "set_ca_cert": {
            "options": {
                "auto": "Auto",
                "custom": "Custom",
                "off": "Off"
            }
        }
    }
}